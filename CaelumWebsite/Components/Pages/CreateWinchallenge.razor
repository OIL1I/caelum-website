@page "/winchallenge/create"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="overlay-container">
    <div class="form-container" style="padding-top: 20px; padding-bottom: 90px;">
        <form>
            <label>Winchallenge Name:</label>
            <input type="text" placeholder="@($"Winchallenge {WinchlgCount}")" @bind="WinchlngName"/>
            <div style="padding: 10px 0px;">
                <label>Mitspieler:</label>
                <ul class="list-group">
                    @foreach (Models.Participant part in _Participants)
                    {
                        <li @key="part" class="list-group-item form-check form-check-inline">
                            @* <InputText bind-Value="@part.Name" /> *@
                            <input class="form-check-input" type="text" @bind="@part.Name"/>
                            <button type="button" @onclick="() => _Participants.Remove(part)">Delete</button>
                        </li>
                    }
                </ul>
                <button type="button" @onclick="AddParticipant" style="padding: 7px 0px;">Add Participant</button>
            </div>
            <div style="padding: 10px 0px;">
                <label>Challenges:</label>
                <ul class="list-group">
                    @foreach (Models.Challenge chlng in _Challenges)
                    {
                        <li @key="chlng" class="list-group-item form-check form-check-inline">
                            <input type="text" @bind="@chlng.Name"/>
                            <input class="form-check-input" type="checkbox" @bind="@chlng.IsBackToBack"/>
                            <label class="form-check-label">Back to Back</label>
                            <Label>Required Copletions</Label>
                            <input type="number" min="1" @bind="@chlng.RequiredCompletions"/>
                            <button type="button" @onclick="() => _Challenges.Remove(chlng)">Delete</button>
                        </li>
                    }
                </ul>
                <button type="button" @onclick="AddChallenge" style="padding: 7px 0px;">Add Challenge</button>
            </div>
            <button type="button" @onclick="CreateWinchallange">Create</button>
        </form>
    </div>
</div>

@code {
    private int WinchlgCount;
    private string WinchlngName;
    private List<Models.Participant> _Participants;
    private List<Models.Challenge> _Challenges;

    public void AddParticipant()
    {
        var partCount = _Participants.Count;
        _Participants.Add(new Models.Participant(partCount, $"Name{partCount}"));
    }

    public void AddChallenge()
    {
        var chlngCount = _Challenges.Count;
        _Challenges.Add(new Models.Challenge(chlngCount, $"Challenge{chlngCount}"));
    }

    public void CreateWinchallange()
    {
        var wchlng = new Models.Winchallenge(WinchlgCount, WinchlngName);
        wchlng.Participants = _Participants;
        wchlng.Challenges = _Challenges;
        AppData.GetWinchallenges().Add(wchlng);
        NavigationManager.NavigateTo("/winchallenge");
    }

    protected override void OnInitialized()
    {
        _Participants = new List<Models.Participant>()
        {
            new Models.Participant(0, "Name0")
        };
        _Challenges = new List<Models.Challenge>()
        {
            new Models.Challenge(0, "Challenge0")
        };
        WinchlgCount = AppData.GetWinchallenges().Count;
        WinchlngName = $"Winchallenge {WinchlgCount}";
    }

}